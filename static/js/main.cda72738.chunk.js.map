{"version":3,"sources":["components/Navbar.js","Reducers/ContactReducer.js","Context/ContactData.js","components/ContactDetails.js","components/Contacts.js","Hooks/InputHooks.js","components/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","type","id","ContactReducer","state","action","newContact","window","confirm","filter","contact","ContactData","createContext","ContactDataProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","contacts","dispatch","useEffect","setItem","stringify","Provider","value","users1","children","ContactDetails","user3","useContext","name","email","phone","onClick","Contacts","console","log","length","map","user2","InputHook","val","useState","setState","e","target","ContactForm","setName","resetName","setEmail","resetEmail","setPhone","resetPhone","onSubmit","preventDefault","uuidv4","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cda72738.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n  <div className=\"container\">\r\n    <a className=\"navbar-brand\" href=\"#\">Contact</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n      {/* <ul className=\"navbar-nav me-auto\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" href=\"#\">Home\r\n            <span className=\"visually-hidden\">(current)</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Features</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n       \r\n      </ul> */}\r\n     \r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export const ContactReducer = (state, action) => {\r\n     switch(action.type){\r\n         case \"ADD_CONTACT\":\r\n             return [...state, action.newContact];\r\n\r\n        case 'REMOVE_CONTACT':\r\n            if(window.confirm(\"Are you really want to delete this contact?\")) {\r\n                 const filtered = state.filter(contact => contact.id !== action.id);\r\n                 return filtered;\r\n                }\r\n\r\n                default:\r\n                    return state;\r\n     }\r\n};","import React, { useState, createContext, useReducer, useEffect } from 'react';\r\nimport { ContactReducer } from '../Reducers/ContactReducer';\r\n\r\nexport const ContactData = createContext();\r\n\r\nconst ContactDataProvider = props => {\r\n\r\n    // the below is taken in disptach one \r\n    // const [contacts, setContacts] = useState([\r\n    //     {id:1, name: 'Lizanne', email: 'lizanne@gmail.com', phone: '8050505050'},\r\n    //     {id:1, name: 'Pooja', email: 'pooja@gmail.com', phone: '8050505051'},\r\n    //     {id:1, name: 'Rihen', email: 'rihen@gmail.com', phone: '8050505052'}\r\n    // ]);\r\n\r\n\r\n\r\n    // copied from above array of object\r\n    // const [contacts, dispatch] = useReducer(ContactReducer, [\r\n    //     {id:1, name: 'Lizanne', email: 'lizanne@gmail.com', phone: '8050505050'},\r\n    //     {id:1, name: 'Pooja', email: 'pooja@gmail.com', phone: '8050505051'},\r\n    //     {id:1, name: 'Rihen', email: 'rihen@gmail.com', phone: '8050505052'}\r\n    // ]);\r\n\r\n    // copied from above for storing data in local storage and import useEffect hook as above\r\n    const [contacts, dispatch] = useReducer(ContactReducer, [], () => {\r\n        const localData = localStorage.getItem('contacts');\r\n        return localData ? JSON.parse(localData) : [];\r\n    });\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n// This has taken in ContactReducer.js as ADD_CONTACT\r\n    // const addContact = contact => {\r\n    //     // this ...contacts is in contactreducers as ...state\r\n    //     setContacts([...contacts, contact ]);\r\n    // }\r\n\r\n\r\n    // This has taken in ContactReducer.js as REMOVE_CONTACT\r\n    // const removeContact = id => {\r\n    //     if(window.confirm(\"Are you really want to delete this contact?\")) {\r\n    //     const filtered = contacts.filter( contact => contact.id !== id );\r\n    //     setContacts(filtered);\r\n    //     }\r\n    // };\r\n\r\n\r\n    return (\r\n        // <ContactData.Provider value={{...contacts}}>\r\n        // <ContactData.Provider value={{ users1: contacts, addContact: addContact }}>\r\n        // <ContactData.Provider value={{ users1: contacts, addContact, removeContact }}> This is has taken place of dispatch\r\n        <ContactData.Provider value={{ users1: contacts, dispatch }}> \r\n            {props.children}\r\n        </ContactData.Provider>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactDataProvider;","import React, {useContext} from 'react';\r\nimport { ContactData } from '../Context/ContactData';\r\n\r\nconst ContactDetails = ({user3}) => {\r\n    // const {removeContact} = useContext(ContactData); // Now removeContact has taken place of dispatch\r\n    const {dispatch} = useContext(ContactData); \r\n    return(\r\n        <>\r\n        <td>{user3.name}</td>\r\n        <td>{user3.email}</td>\r\n        <td>{user3.phone}</td>\r\n        <td>\r\n            {/* <button type=\"button\" className=\"btn btn-danger\" onClick={ () => removeContact(user3.id)}> */}\r\n            {/* <button type=\"button\" className=\"btn btn-danger\" onClick={ () => dispatch(user3.id)}> */}\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={ () => dispatch({type: 'REMOVE_CONTACT', id: user3.id})}>\r\n                Remove\r\n            </button>\r\n        </td>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactDetails;","import React, {useContext} from 'react';\r\nimport {ContactData} from '../Context/ContactData';\r\nimport ContactDetails from './ContactDetails';\r\n\r\nconst Contacts = () => {\r\n//const data = useContext(ContactData);\r\n// console.log(\"This is data \", data);\r\n// console.log(\"This is data.users \", data.users);\r\n\r\nconst { users1 } = useContext(ContactData);\r\nconsole.log(\"This is just users \",users1);\r\n    // return(\r\n    //     <>\r\n    // <h1>Hello</h1>\r\n    \r\n    // </>\r\n    // );\r\n    return users1.length ? <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Delete</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {users1.map((user2) => (\r\n                <tr key={user2.id}>\r\n                    <ContactDetails user3={user2} />\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table> : <div> No Data </div>;\r\n};\r\n\r\nexport default Contacts;","import React, {useState} from 'react';\r\n\r\nconst InputHook = (val) => {\r\n  const [state, setState] = useState(val);\r\n  const inputField = (e) => {\r\n      setState(e.target.value);\r\n  };\r\n\r\n  const clear = () =>{\r\n    setState(\"\");\r\n  };\r\n\r\n  return [state, inputField, clear];\r\n};\r\n\r\nexport default InputHook;","import React, { useContext } from 'react';\r\nimport InputHook from '../Hooks/InputHooks';\r\nimport { ContactData } from '../Context/ContactData';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactForm = () => {\r\n\r\n    // const { addContact } = useContext(ContactData); this has taken place of dispatch\r\n    const { dispatch } = useContext(ContactData);\r\n\r\n    const [name, setName, resetName] = InputHook(\"\");\r\n    const [email, setEmail, resetEmail] = InputHook(\"\");\r\n    const [phone, setPhone, resetPhone] = InputHook(\"\");\r\n\r\n    const addNewContact = e => {\r\n        e.preventDefault();\r\n        // addContact( { id:uuidv4(), name: name, email: email, phone: phone } ); \r\n        // dispatch( { id:uuidv4(), name: name, email: email, phone: phone } );\r\n        // this newContact taken in contactReducer.js\r\n        dispatch( { type: 'ADD_CONTACT', newContact: {id:uuidv4(), name: name, email: email, phone: phone }} ); // inside curly braces called action in Redux\r\n        resetName('');\r\n        resetEmail('');\r\n        resetPhone('');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={addNewContact}>\r\n            <div className=\"form-group\">\r\n                <h3> Add Contact </h3>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" name=\"name\" className=\"form-control\" \r\n                placeholder=\"Enter name\" value={name} onChange={setName} />            \r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" name=\"email\" className=\"form-control\" \r\n                placeholder=\"Enter email\" value={email} onChange={setEmail} />            \r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" name=\"phone\" className=\"form-control\" \r\n                placeholder=\"Enter phone\" value={phone} onChange={setPhone} />            \r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <input type=\"submit\" className=\"btn btn-info btn-block\" />          \r\n            </div>\r\n        </form>\r\n        <br />\r\n        <br />\r\n</>\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default ContactForm;","// import Languages from './components/languages';\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\nimport './App.css';\n// import ShopContextProvider from \"./contexts/ShopContext\";\n// import ShowProducts from \"./components/showProducts\";\n// import Nav from './components/Nav2';\n// import ThemeContextProvider from './contexts/ThemeContext';\nimport Navbar from \"./components/Navbar\";\nimport ContactDataProvider from \"./Context/ContactData\";\nimport Contacts from './components/Contacts';\nimport ContactForm from './components/ContactForm';\n\n\n\n\nfunction App() {\n  return (\n    // <div className=\"container mt-5\">\n    <>\n     \n    <Navbar />\n    <div className=\"container mt-5\">\n    <h4> Demo Project for Adding Contact </h4>\n<ContactDataProvider>\n  <ContactForm />\n<Contacts />\n</ContactDataProvider>  \n\n\n      {/* <Languages /> */}\n\n      {/* <ShopContextProvider>\n        <Nav />\n        <ThemeContextProvider>\n           <ShowProducts />\n        </ThemeContextProvider>\n      </ShopContextProvider> */}\n    </div>\n    </>\n    // Done till Page no. 35 and Time 49:56\n    // Done till Page no. 87 and Time 1:48:56\n    // Done till Page no. 152  and Time 2:40:18\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}